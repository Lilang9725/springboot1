<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <welcome-file-list>
<!--        <welcome-file>jsp/login.jsp</welcome-file>-->
        <welcome-file>jsp/home-page.jsp</welcome-file>
    </welcome-file-list>

    <!--    这段配置是用于指定applicationContext.xml配置文件的位置，可通过context-param加以指定：-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-mybatis.xml</param-value>
        <!--        <param-value>/WEB-INF/classes/applicationContext.xml</param-value>-->
    </context-param>

    <servlet>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <!-- 不会匹配到*.jsp，即：*.jsp不会进入spring的 DispatcherServlet类, 会匹配到/login这样的路径型url，不会匹配到模式为*.jsp这样的后缀型url -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--    ContextLoaderListener是Spring的监听器，它的作用就是启动Web容器时，自动装配ApplicationContext的配置信息。
   因为它实现了ServletContextListener这个接口，在web.xml配置这个监听器，启动容器时，就会默认执行它实现的方法。-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

</web-app>